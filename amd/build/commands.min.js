define("tiny_chemdraw/commands",["exports","editor_tiny/utils","core/str","./common","./ui","core/notification"],(function(_exports,_utils,_str,_common,_ui,_notification){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;
/**
   * Commands helper for the Moodle tiny_chemdraw plugin.
   *
   * @module      plugintype_pluginname/commands
   * @copyright   2024 Aniket Kumar <aniketkj9211@gmail.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const handleAction=async editor=>{new _ui.ChemEmbed(editor).init();const insertButton=document.getElementById("insertButton");insertButton?insertButton.addEventListener("click",_ui.insert):_notification.notify.addNotification({type:"error",message:"Insert button not found in the DOM."})};_exports.getSetup=async()=>{try{const buttonName=await(0,_str.get_string)("buttonName",_common.component),buttonImage=await(0,_utils.getButtonImage)("icon",_common.component);return editor=>{editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addButton(buttonName,{icon:_common.icon,tooltip:buttonName,onAction:()=>handleAction(editor)}),editor.ui.registry.addMenuItem(buttonName,{icon:_common.icon,text:buttonName,onAction:()=>handleAction(editor)})}}catch(error){return _notification.notify.addNotification({type:"error",message:"Error setting up the tiny_chemdraw plugin: "+error.message}),null}}}));

//# sourceMappingURL=commands.min.js.map